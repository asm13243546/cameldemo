<?xml version="1.0" encoding="UTF-8"?>
<!--
    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->
<!-- START SNIPPET: reference -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:spring-security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="
         http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
         http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
         http://camel.apache.org/schema/spring-security http://camel.apache.org/schema/spring-security/camel-spring-security.xsd
         http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

  <spring-security:http realm="User Restrict Realm">
    <spring-security:intercept-url pattern="/camel/**"
                                   access="hasRole('ROLE_USER')"/>
    <spring-security:http-basic/>
    <spring-security:remember-me/>
  </spring-security:http>

    <!-- user configuration here -->
  <spring-security:authentication-manager alias="authenticationManager">
    <spring-security:authentication-provider user-service-ref="userDetailsService"/>
  </spring-security:authentication-manager>

  <spring-security:user-service id="userDetailsService">
    <spring-security:user name="ryan" password="ryanspassword" authorities="ROLE_USER"/>
  </spring-security:user-service>

  <bean id="accessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
    <constructor-arg>
      <bean class="org.springframework.security.access.vote.RoleVoter"/>
    </constructor-arg>
    <property name="allowIfAllAbstainDecisions" value="true"/>
  </bean>

  <!-- Policy for checking authentication role USER -->
  <authorizationPolicy id="user" access="ROLE_USER"
                       xmlns="http://camel.apache.org/schema/spring-security"/>

  <camelContext id="myCamelContext" xmlns="http://camel.apache.org/schema/spring">
    <!-- Catch the authorization exception and set the Access Denied message back -->
    <onException>
      <exception>org.apache.camel.CamelAuthorizationException</exception>
      <handled>
        <constant>true</constant>
      </handled>
      <transform>
        <simple>Access Denied with the Policy of ${exception.policyId} !</simple>
      </transform>
    </onException>

    <route>
      <from uri="servlet:user"/>
      <!-- wrap the route in the policy which enforces security check -->
      <policy ref="user">
        <transform>
          <simple>Normal user can access this service</simple>
        </transform>
      </policy>
    </route>

  </camelContext>

</beans>
  <!-- END SNIPPET: reference -->
